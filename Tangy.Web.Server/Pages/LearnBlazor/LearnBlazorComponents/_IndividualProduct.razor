<div class="bg-light border m-2 col-5" @onclick="(args)=>SelectProduct(args,Product.Name)">
	<h4 class="text-secondary">Product - @Product.Id</h4>
	<input type="checkbox" @onchange="AddToFavorites" /> Add to Favorite <br />
	Name - @Product.Name <br />

	RF from Parent - @Fragment1 @Fragment2 <br />

	Show Properties : <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" />

	@if (Product.IsActive)
	{
		@foreach (var prodProp in Product.ProductProperties)
		{
			<p>@prodProp.Key - @prodProp.Value</p>
		}
	}
	<br />
	<_EditDeleteButton IsActive="@Product.IsActive"></_EditDeleteButton>
</div>
@code {
	[Parameter]
	public Demo_Product Product { get; set; }

	[Parameter]

	public EventCallback<bool> FavoriteCountChangeHandler { get; set; }

	[Parameter]

	public RenderFragment? Fragment1 { get; set; }

	[Parameter]

	public RenderFragment? Fragment2 { get; set; }

	[Parameter]



	public EventCallback<string> LastSelectedProductChangeHandler { get; set; }

	public async Task AddToFavorites(ChangeEventArgs e)
	{
		await FavoriteCountChangeHandler.InvokeAsync((bool)e.Value);
	}

	public async Task SelectProduct(MouseEventArgs e, string selectedProductName)
	{
		await LastSelectedProductChangeHandler.InvokeAsync(selectedProductName);
	}


}
