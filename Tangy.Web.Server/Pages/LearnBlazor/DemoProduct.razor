@page "/learnblazor/demoproduct"

<h2 class="text-primary">DemoProduct</h2>
<p>Favorites Total : @SelectedFavoriteCount</p>
<br />
<p>Last selected product : @LastSelectedProduct</p>
<div class="border p-2 mt-2" style="background-color:azure">
	<div class="row">
		@foreach (var prod in Products)
		{
			<_IndividualProduct Product="prod" FavoriteCountChangeHandler="FavoriteCountUpdate" LastSelectedProductChangeHandler="LastSelectedProductUpdate">
				<Fragment1>#1</Fragment1>
				<Fragment2>#2</Fragment2>
			</_IndividualProduct>
		}
	</div>
</div>

@code {
	List<Demo_Product> Products = new();

	private int SelectedFavoriteCount { get; set; } = 0;

	private string LastSelectedProduct { get; set; } = string.Empty;

	protected override void OnInitialized()
	{
		Products.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,
				Price = 10.99,
				ProductProperties = new()
				{
				new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
					 new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
					new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		Products.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 13.99,
				ProductProperties = new()
			{
				new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
				new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
				new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
			}
			});
	}

	protected void FavoriteCountUpdate(bool isSelected)
	{
		if (isSelected)
		{
			SelectedFavoriteCount++;
		}
		else
		{
			SelectedFavoriteCount--;
		}
	}

	protected void LastSelectedProductUpdate(string lastSelectedProduct)
	{
		LastSelectedProduct = lastSelectedProduct;
	}

}
